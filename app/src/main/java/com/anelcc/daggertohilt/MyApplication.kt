package com.anelcc.daggertohilt

import android.app.Application
import com.anelcc.daggertohilt.di.AppComponent
import com.anelcc.daggertohilt.di.DaggerAppComponent

open class MyApplication : Application() {

    // Instance of the AppComponent that will be used by all the Activities in the project
    val appComponent: AppComponent by lazy {
       /* Views require objects from the graph
        Creates an instance of AppComponent using its Factory constructor
        Since we defined a Component Factory with the @Component.Factory annotation,
        we can call .factory() that is a static method of DaggerAppComponent.*/

        //`DaggerAppComponent` containing the implementation of the `AppComponent` generated by Dagger
        // We pass the applicationContext that will be used as Context in the graph
        DaggerAppComponent.factory().create(applicationContext)
    }

   /* open val userManager by lazy {
        UserManager(SharedPreferencesStorage(this))
    }*/
}
